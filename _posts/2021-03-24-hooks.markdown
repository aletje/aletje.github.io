---
layout: post
title:  "Data Pipelines with Airflow - Airflow hooks"
date:   2021-03-24
categories: airflow
---

### Connection via Airflow Hooks
Connections can be accessed in code via hooks. Hooks provide a reusable interface to external systems and databases. With hooks, you don’t have to worry about how and where to store these connection strings and secrets in your code.


{% highlight python %}
from airflow import DAG
from airflow.hooks.postgres_hook import PostgresHook
from airflow.operators.python_operator import PythonOperator

def load():
# Create a PostgresHook option using the `demo` connection
    db_hook = PostgresHook(‘demo’)
    df = db_hook.get_pandas_df('SELECT * FROM rides')
    print(f'Successfully used PostgresHook to return {len(df)} records')

load_task = PythonOperator(task_id=’load’, python_callable=hello_world, ...)
{% endhighlight %}

Airflow comes with many Hooks that can integrate with many systems. For example:

`HttpHook`
`PostgresHook (works with RedShift)`
`MySqlHook`
`SlackHook`
`PrestoHook`